{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "maxdev00adf"
		},
		"MaxDev_databricks_ls_properties_typeProperties_existingClusterId": {
			"type": "string",
			"defaultValue": "0222-172249-wf0ly7k4"
		},
		"MaxDev_datalake_ls_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://maxdev00storage.dfs.core.windows.net/"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/MaxDev_databricks_ls')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureDatabricks",
				"typeProperties": {
					"domain": "https://adb-3151607451061839.19.azuredatabricks.net",
					"authentication": "MSI",
					"workspaceResourceId": "/subscriptions/f1fb6f22-5de4-4cae-8efe-57a18eec5da0/resourceGroups/maxdev_resource_group/providers/Microsoft.Databricks/workspaces/maxdev_databricks_workspace",
					"existingClusterId": "[parameters('MaxDev_databricks_ls_properties_typeProperties_existingClusterId')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/MaxDev_datalake_ls')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobFS",
				"typeProperties": {
					"url": "[parameters('MaxDev_datalake_ls_properties_typeProperties_url')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/FormulaOne_Raw_folder')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "MaxDev_datalake_ls",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"p_window_end_date": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"folderPath": {
							"value": "@formatDateTime(dataset().p_window_end_date,'yyyy-MM-dd')",
							"type": "Expression"
						},
						"fileSystem": "raw"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "circuitId",
						"type": "String"
					},
					{
						"name": "circuitRef",
						"type": "String"
					},
					{
						"name": "name",
						"type": "String"
					},
					{
						"name": "location",
						"type": "String"
					},
					{
						"name": "country",
						"type": "String"
					},
					{
						"name": "lat",
						"type": "String"
					},
					{
						"name": "lng",
						"type": "String"
					},
					{
						"name": "alt",
						"type": "String"
					},
					{
						"name": "url",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/MaxDev_datalake_ls')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Formula One Data Ingest')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Get Folder Info",
						"description": "Checking if the directory for a given date is present in the raw container or not.",
						"type": "GetMetadata",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "FormulaOne_Raw_folder",
								"type": "DatasetReference",
								"parameters": {
									"p_window_end_date": {
										"value": "@pipeline().parameters.p_window_end_date",
										"type": "Expression"
									}
								}
							},
							"fieldList": [
								"exists"
							],
							"storeSettings": {
								"type": "AzureBlobFSReadSettings",
								"enablePartitionDiscovery": false
							},
							"formatSettings": {
								"type": "DelimitedTextReadSettings"
							}
						}
					},
					{
						"name": "If Folder Exists",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "Get Folder Info",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@activity('Get Folder Info').output.exists",
								"type": "Expression"
							},
							"ifTrueActivities": [
								{
									"name": "Ingestion_circuits",
									"type": "DatabricksNotebook",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"notebookPath": "/Repos/sharmamarmik07@outlook.com/FormulaOne_Databricks/FormulaOne/Ingestion/1. Ingest_circuits_file",
										"baseParameters": {
											"data_source": {
												"value": "@variables('v_data_source')",
												"type": "Expression"
											},
											"file_date": {
												"value": "@formatDateTime(pipeline().parameters.p_window_end_date,'yyyy-MM-dd')",
												"type": "Expression"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "MaxDev_databricks_ls",
										"type": "LinkedServiceReference"
									}
								},
								{
									"name": "Ingestion_races",
									"type": "DatabricksNotebook",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"notebookPath": "/Repos/sharmamarmik07@outlook.com/FormulaOne_Databricks/FormulaOne/Ingestion/2. Ingest_races_file",
										"baseParameters": {
											"data_source": {
												"value": "@variables('v_data_source')",
												"type": "Expression"
											},
											"file_date": {
												"value": "@formatDateTime(pipeline().parameters.p_window_end_date,'yyyy-MM-dd')",
												"type": "Expression"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "MaxDev_databricks_ls",
										"type": "LinkedServiceReference"
									}
								},
								{
									"name": "Ingestion_constructor",
									"type": "DatabricksNotebook",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"notebookPath": "/Repos/sharmamarmik07@outlook.com/FormulaOne_Databricks/FormulaOne/Ingestion/3. Ingest_constructor_file",
										"baseParameters": {
											"data_source": {
												"value": "@variables('v_data_source')",
												"type": "Expression"
											},
											"file_date": {
												"value": "@formatDateTime(pipeline().parameters.p_window_end_date,'yyyy-MM-dd')",
												"type": "Expression"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "MaxDev_databricks_ls",
										"type": "LinkedServiceReference"
									}
								},
								{
									"name": "Ingestion_driver",
									"type": "DatabricksNotebook",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"notebookPath": "/Repos/sharmamarmik07@outlook.com/FormulaOne_Databricks/FormulaOne/Ingestion/4. Ingest_driver_file",
										"baseParameters": {
											"data_source": {
												"value": "@variables('v_data_source')",
												"type": "Expression"
											},
											"file_date": {
												"value": "@formatDateTime(pipeline().parameters.p_window_end_date,'yyyy-MM-dd')",
												"type": "Expression"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "MaxDev_databricks_ls",
										"type": "LinkedServiceReference"
									}
								},
								{
									"name": "Ingestion_results",
									"type": "DatabricksNotebook",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"notebookPath": "/Repos/sharmamarmik07@outlook.com/FormulaOne_Databricks/FormulaOne/Ingestion/5. Ingest_results_file",
										"baseParameters": {
											"data_source": {
												"value": "@variables('v_data_source')",
												"type": "Expression"
											},
											"file_date": {
												"value": "@formatDateTime(pipeline().parameters.p_window_end_date,'yyyy-MM-dd')",
												"type": "Expression"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "MaxDev_databricks_ls",
										"type": "LinkedServiceReference"
									}
								},
								{
									"name": "Ingestion_laptimes",
									"type": "DatabricksNotebook",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"notebookPath": "/Repos/sharmamarmik07@outlook.com/FormulaOne_Databricks/FormulaOne/Ingestion/7. Ingest_LapTimes_file",
										"baseParameters": {
											"data_source": {
												"value": "@variables('v_data_source')",
												"type": "Expression"
											},
											"file_date": {
												"value": "@formatDateTime(pipeline().parameters.p_window_end_date,'yyyy-MM-dd')",
												"type": "Expression"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "MaxDev_databricks_ls",
										"type": "LinkedServiceReference"
									}
								},
								{
									"name": "Ingestion_qualifying",
									"type": "DatabricksNotebook",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"notebookPath": "/Repos/sharmamarmik07@outlook.com/FormulaOne_Databricks/FormulaOne/Ingestion/8. Ingest_Qualifying_file",
										"baseParameters": {
											"data_source": {
												"value": "@variables('v_data_source')",
												"type": "Expression"
											},
											"file_date": {
												"value": "@formatDateTime(pipeline().parameters.p_window_end_date,'yyyy-MM-dd')",
												"type": "Expression"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "MaxDev_databricks_ls",
										"type": "LinkedServiceReference"
									}
								},
								{
									"name": "Ingestion_pitstops",
									"type": "DatabricksNotebook",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"notebookPath": "/Repos/sharmamarmik07@outlook.com/FormulaOne_Databricks/FormulaOne/Ingestion/6. Ingest_pitstops_file",
										"baseParameters": {
											"data_source": {
												"value": "@variables('v_data_source')",
												"type": "Expression"
											},
											"file_date": {
												"value": "@formatDateTime(pipeline().parameters.p_window_end_date,'yyyy-MM-dd')",
												"type": "Expression"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "MaxDev_databricks_ls",
										"type": "LinkedServiceReference"
									}
								}
							]
						}
					}
				],
				"concurrency": 1,
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"p_window_end_date": {
						"type": "string"
					}
				},
				"variables": {
					"v_data_source": {
						"type": "String",
						"defaultValue": "Ergast API"
					}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/FormulaOne_Raw_folder')]",
				"[concat(variables('factoryId'), '/linkedServices/MaxDev_databricks_ls')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Formula One Data Ingest_copy1')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Get Folder Info",
						"description": "Checking if the directory for a given date is present in the raw container or not.",
						"type": "GetMetadata",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "FormulaOne_Raw_folder",
								"type": "DatasetReference",
								"parameters": {
									"p_window_end_date": {
										"value": "@pipeline().parameters.p_window_end_date",
										"type": "Expression"
									}
								}
							},
							"fieldList": [
								"exists"
							],
							"storeSettings": {
								"type": "AzureBlobFSReadSettings",
								"enablePartitionDiscovery": false
							},
							"formatSettings": {
								"type": "DelimitedTextReadSettings"
							}
						}
					},
					{
						"name": "If Folder Exists",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "Get Folder Info",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@activity('Get Folder Info').output.exists",
								"type": "Expression"
							},
							"ifTrueActivities": [
								{
									"name": "Ingestion_circuits",
									"type": "DatabricksNotebook",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"notebookPath": "/Repos/sharmamarmik07@outlook.com/FormulaOne_Databricks/FormulaOne/Ingestion/1. Ingest_circuits_file",
										"baseParameters": {
											"data_source": {
												"value": "@variables('v_data_source')",
												"type": "Expression"
											},
											"file_date": {
												"value": "@formatDateTime(pipeline().parameters.p_window_end_date,'yyyy-MM-dd')",
												"type": "Expression"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "MaxDev_databricks_ls",
										"type": "LinkedServiceReference"
									}
								},
								{
									"name": "Ingestion_races",
									"type": "DatabricksNotebook",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"notebookPath": "/Repos/sharmamarmik07@outlook.com/FormulaOne_Databricks/FormulaOne/Ingestion/2. Ingest_races_file",
										"baseParameters": {
											"data_source": {
												"value": "@variables('v_data_source')",
												"type": "Expression"
											},
											"file_date": {
												"value": "@formatDateTime(pipeline().parameters.p_window_end_date,'yyyy-MM-dd')",
												"type": "Expression"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "MaxDev_databricks_ls",
										"type": "LinkedServiceReference"
									}
								},
								{
									"name": "Ingestion_constructor",
									"type": "DatabricksNotebook",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"notebookPath": "/Repos/sharmamarmik07@outlook.com/FormulaOne_Databricks/FormulaOne/Ingestion/3. Ingest_constructor_file",
										"baseParameters": {
											"data_source": {
												"value": "@variables('v_data_source')",
												"type": "Expression"
											},
											"file_date": {
												"value": "@formatDateTime(pipeline().parameters.p_window_end_date,'yyyy-MM-dd')",
												"type": "Expression"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "MaxDev_databricks_ls",
										"type": "LinkedServiceReference"
									}
								},
								{
									"name": "Ingestion_driver",
									"type": "DatabricksNotebook",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"notebookPath": "/Repos/sharmamarmik07@outlook.com/FormulaOne_Databricks/FormulaOne/Ingestion/4. Ingest_driver_file",
										"baseParameters": {
											"data_source": {
												"value": "@variables('v_data_source')",
												"type": "Expression"
											},
											"file_date": {
												"value": "@formatDateTime(pipeline().parameters.p_window_end_date,'yyyy-MM-dd')",
												"type": "Expression"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "MaxDev_databricks_ls",
										"type": "LinkedServiceReference"
									}
								},
								{
									"name": "Ingestion_results",
									"type": "DatabricksNotebook",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"notebookPath": "/Repos/sharmamarmik07@outlook.com/FormulaOne_Databricks/FormulaOne/Ingestion/5. Ingest_results_file",
										"baseParameters": {
											"data_source": {
												"value": "@variables('v_data_source')",
												"type": "Expression"
											},
											"file_date": {
												"value": "@formatDateTime(pipeline().parameters.p_window_end_date,'yyyy-MM-dd')",
												"type": "Expression"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "MaxDev_databricks_ls",
										"type": "LinkedServiceReference"
									}
								},
								{
									"name": "Ingestion_laptimes",
									"type": "DatabricksNotebook",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"notebookPath": "/Repos/sharmamarmik07@outlook.com/FormulaOne_Databricks/FormulaOne/Ingestion/7. Ingest_LapTimes_file",
										"baseParameters": {
											"data_source": {
												"value": "@variables('v_data_source')",
												"type": "Expression"
											},
											"file_date": {
												"value": "@formatDateTime(pipeline().parameters.p_window_end_date,'yyyy-MM-dd')",
												"type": "Expression"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "MaxDev_databricks_ls",
										"type": "LinkedServiceReference"
									}
								},
								{
									"name": "Ingestion_qualifying",
									"type": "DatabricksNotebook",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"notebookPath": "/Repos/sharmamarmik07@outlook.com/FormulaOne_Databricks/FormulaOne/Ingestion/8. Ingest_Qualifying_file",
										"baseParameters": {
											"data_source": {
												"value": "@variables('v_data_source')",
												"type": "Expression"
											},
											"file_date": {
												"value": "@formatDateTime(pipeline().parameters.p_window_end_date,'yyyy-MM-dd')",
												"type": "Expression"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "MaxDev_databricks_ls",
										"type": "LinkedServiceReference"
									}
								},
								{
									"name": "Ingestion_pitstops",
									"type": "DatabricksNotebook",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"notebookPath": "/Repos/sharmamarmik07@outlook.com/FormulaOne_Databricks/FormulaOne/Ingestion/6. Ingest_pitstops_file",
										"baseParameters": {
											"data_source": {
												"value": "@variables('v_data_source')",
												"type": "Expression"
											},
											"file_date": {
												"value": "@formatDateTime(pipeline().parameters.p_window_end_date,'yyyy-MM-dd')",
												"type": "Expression"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "MaxDev_databricks_ls",
										"type": "LinkedServiceReference"
									}
								}
							]
						}
					}
				],
				"concurrency": 1,
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"p_window_end_date": {
						"type": "string"
					}
				},
				"variables": {
					"v_data_source": {
						"type": "String",
						"defaultValue": "Ergast API"
					}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/FormulaOne_Raw_folder')]",
				"[concat(variables('factoryId'), '/linkedServices/MaxDev_databricks_ls')]"
			]
		}
	]
}